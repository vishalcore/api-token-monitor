name: API Token Monitor

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:  # Manual trigger button

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check API Response
        id: api_check
        run: |
          echo "Checking API tokens..."
          
          # Make API request with better error handling
          response=$(curl -s -w "\nHTTP_STATUS:%{http_code}" -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
            -H "HTTP-Referer: https://aihime.app" \
            -H "X-Title: Aihime Anime Chat App" \
            -d '{
              "model": "meta-llama/llama-4-scout",
              "messages": [
                {"role": "system", "content": "Say Hi"},
                {"role": "user", "content": "Tell me how many tokens remaining"}
              ]
            }' \
            https://openrouter.ai/api/v1/chat/completions)
          
          # Extract HTTP status
          http_status=$(echo "$response" | grep "HTTP_STATUS:" | cut -d: -f2)
          response_body=$(echo "$response" | sed '/HTTP_STATUS:/d')
          
          echo "HTTP Status: $http_status"
          echo "API Response:"
          echo "$response_body"
          
          # Check if API call failed
          if [[ "$http_status" != "200" ]]; then
            echo "alert=true" >> $GITHUB_OUTPUT
            echo "message=API call failed with status $http_status: $response_body" >> $GITHUB_OUTPUT
            echo "error_type=api_failure" >> $GITHUB_OUTPUT
          # Check for specific keywords that indicate low tokens
          elif echo "$response_body" | grep -qi "low\|limit\|exceeded\|quota\|insufficient\|error"; then
            echo "alert=true" >> $GITHUB_OUTPUT
            echo "message=$response_body" >> $GITHUB_OUTPUT
            echo "error_type=token_warning" >> $GITHUB_OUTPUT
          else
            echo "alert=false" >> $GITHUB_OUTPUT
            echo "message=$response_body" >> $GITHUB_OUTPUT
          fi

      - name: Send Discord Alert Notification
        if: steps.api_check.outputs.alert == 'true'
        run: |
          curl -H "Content-Type: application/json" \
            -d "{
              \"embeds\": [{
                \"title\": \"üö® API Token Alert\",
                \"description\": \"Token limit warning detected!\",
                \"color\": 15158332,
                \"fields\": [{
                  \"name\": \"Response\",
                  \"value\": \"$(echo '${{ steps.api_check.outputs.message }}' | head -c 1000)\"
                }],
                \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"
              }]
            }" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send Discord Success Notification
        if: steps.api_check.outputs.alert == 'false'
        run: |
          curl -H "Content-Type: application/json" \
            -d "{
              \"embeds\": [{
                \"title\": \"‚úÖ API Token Monitor\",
                \"description\": \"API check completed successfully - no issues detected\",
                \"color\": 3066993,
                \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"
              }]
            }" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Test Discord Webhook
        run: |
          echo "Testing Discord webhook connection..."
          webhook_test=$(curl -s -w "%{http_code}" -H "Content-Type: application/json" \
            -d "{
              \"embeds\": [{
                \"title\": \"üîß Webhook Test\",
                \"description\": \"Testing Discord webhook connection from GitHub Actions\",
                \"color\": 16776960,
                \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"
              }]
            }" \
            ${{ secrets.DISCORD_WEBHOOK_URL }})
          
          if [[ "$webhook_test" == *"200"* ]] || [[ "$webhook_test" == *"204"* ]]; then
            echo "‚úÖ Discord webhook test successful"
          else
            echo "‚ùå Discord webhook test failed with response: $webhook_test"
            exit 1
          fi
